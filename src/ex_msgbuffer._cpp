/* Copyright (c) Erdet Nasufi, 2018 */

#include <Arduino.h>

#include "uthread.h"
#include "umessagebuffer.h"
#include "ukernel.h"

using namespace urtos;

int count = 0;
Thread sendingThread;
Thread receivingThread;
MessageBuffer msgBuffer(20);

static void sendingTask(u_object dataToPass)
{
    char _str[] = "hello thread";
    u_size _length = strlen((const char *)_str);
    LOOP
    {
        if (msgBuffer.isEmpty())
        {
            msgBuffer.write(_str, _length, 100);
        }
        Thread::sleep(500);
    }
}

static void receivingTask(u_object dataToPass)
{
    Serial.begin(9600);
    while (!Serial)
    {
    }
    Serial.println("setup");

    char _str[50];
    u_size _len;

    LOOP
    {
        if (!msgBuffer.isEmpty())
        {
            _len = msgBuffer.read(_str, 20);
            _str[_len] = 0;
            if (_len > 0)
            {
                Serial.print("read: ");
                Serial.println(_str);
            }
        }
        Thread::sleep(750);
    }
}

void setup()
{
    sendingThread = Thread((ThreadCallback)sendingTask, ThreadPriority::MEDIUM_PRIORITY, configMINIMAL_STACK_SIZE + 128, NULL);
    receivingThread = Thread((ThreadCallback)receivingTask, ThreadPriority::HIGH_PRIORITY, configMINIMAL_STACK_SIZE + 128, NULL);

    Kernel::run();
}

void loop()
{
}